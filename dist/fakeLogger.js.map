{"version":3,"sources":["../src/fakeLogger.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAA;AAE9C,+BAAwB,YAAW,OAAO;aACpC,MAAM,EAAK,GAAG;;IAYX,GAAG,CAAE,GAAG,EAAE,MAAM,EAAE,KAAK,GAAE,MAAe,GAAG,IAAI;IAI/C,KAAK,CAAE,GAAG,EAAE,MAAM,GAAG,IAAI;IAIzB,IAAI,CAAE,GAAG,EAAE,MAAM,GAAG,IAAI;IAIxB,IAAI,CAAE,GAAG,EAAE,MAAM,GAAG,IAAI;IAIxB,KAAK,CAAE,GAAG,EAAE,MAAM,GAAG,IAAI;IAIzB,MAAM,CAAE,GAAG,EAAE,MAAM,GAAG,IAAI;IAI1B,IAAI,CAAE,GAAG,EAAE,MAAM,GAAG,IAAI;CAGhC","file":"fakeLogger.js","sourcesContent":["/**\n * Copyright 2018-present, CODECO. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ILogger } from './interfaces/iLogger'\n\nexport class FakeLogger implements ILogger {\n  get stream (): any {\n    return {\n      write: (message: string, encoding: string) => {\n        console.log(message.replace(/\\n$/, ''))\n      }\n    }\n  }\n\n  constructor () {\n    // does nothing\n  }\n\n  public log (log: string, level: string = 'info'): void {\n    console.log(`${level}: ${log}`)\n  }\n\n  public error (log: string): void {\n    this.log(log, 'error')\n  }\n\n  public warn (log: string): void {\n    this.log(log, 'warn')\n  }\n\n  public info (log: string): void {\n    this.log(log, 'info')\n  }\n\n  public debug (log: string): void {\n    this.log(log, 'debug')\n  }\n\n  public notice (log: string): void {\n    this.log(log, 'notice')\n  }\n\n  public crit (log: string): void {\n    this.log(log, 'crit')\n  }\n}\n"]}