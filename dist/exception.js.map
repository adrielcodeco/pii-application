{"version":3,"sources":["../src/exception.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAA;AAGhE;IACS,KAAK,CAAC,EAAE,MAAM,CAAA;IAErB,OAAO,CAAC,KAAK,CAAC,CAAQ;IACtB,OAAO,CAAC,QAAQ,CAAC,CAAQ;IACzB,OAAO,CAAC,aAAa,CAAC,CAAQ;IAC9B,OAAO,CAAC,OAAO,CAAC,CAAQ;IACxB,OAAO,CAAC,QAAQ,CAAC,CAAQ;IACzB,OAAO,CAAC,gBAAgB,CAAC,CAAS;aAE9B,IAAI,EAAK,MAAM;aAGf,OAAO,EAAK,MAAM;aAGlB,YAAY,EAAK,MAAM;aAGvB,MAAM,EAAK,MAAM;aAGjB,OAAO,EAAK,MAAM;gBAIT,EACX,IAAI,EACJ,OAAO,EACP,YAAY,EACZ,MAAM,EACN,OAAO,EACR,GAAE,gBAAqB;IAgBjB,MAAM,IAAK,MAAM;IAWjB,QAAQ,IAAK,MAAM;IAInB,OAAO,IAAK,MAAM;IAIzB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAE,IAAI,EAAE,MAAM,GAAG,MAAM;CAG5C","file":"exception.js","sourcesContent":["/**\r\n * Copyright 2018-present, CODECO. All rights reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { ExceptionOptions } from './interfaces/exceptionOptions'\r\nimport { Environment } from './environment'\r\n\r\nexport class Exception {\r\n  public stack?: string\r\n\r\n  private _code?: string\r\n  private _message?: string\r\n  private _shortMessage?: string\r\n  private _params?: string\r\n  private _details?: string\r\n  private _developmentMode?: boolean\r\n\r\n  get code (): string {\r\n    return this._code || ''\r\n  }\r\n  get message (): string {\r\n    return this._message || ''\r\n  }\r\n  get shortMessage (): string {\r\n    return this._shortMessage || ''\r\n  }\r\n  get params (): string {\r\n    return this._params || ''\r\n  }\r\n  get details (): string {\r\n    return this._details || ''\r\n  }\r\n\r\n  constructor ({\r\n    code,\r\n    message,\r\n    shortMessage,\r\n    params,\r\n    details\r\n  }: ExceptionOptions = {}) {\r\n    this._developmentMode =\r\n      (!process.env.NODE_ENV && !process.env.DEVELOPMENTMODE) ||\r\n      (process.env.NODE_ENV === Environment.development &&\r\n        !process.env.DEVELOPMENTMODE) ||\r\n      !!process.env.DEVELOPMENTMODE\r\n    this._code = code\r\n    this._message = message\r\n    this._shortMessage = shortMessage\r\n    this._params = params\r\n    this._details = details\r\n\r\n    Error.captureStackTrace(this, this.constructor)\r\n    if (!this._developmentMode) delete this.stack\r\n  }\r\n\r\n  public toJSON (): object {\r\n    const str: any = {}\r\n    if (this._code) str.code = this._code\r\n    if (this._message) str.message = this._message\r\n    if (this._shortMessage) str.shortMessage = this._shortMessage\r\n    if (this._params) str.params = this._params\r\n    if (this._details) str.details = this._details\r\n    if (this._developmentMode && this.stack) str.stack = this.stack\r\n    return str\r\n  }\r\n\r\n  public toString (): string {\r\n    return JSON.stringify(this.toJSON())\r\n  }\r\n\r\n  public valueOf (): string {\r\n    return this.toString()\r\n  }\r\n\r\n  [Symbol.toPrimitive] (hint: string): string {\r\n    return this.toString()\r\n  }\r\n}\r\n"]}