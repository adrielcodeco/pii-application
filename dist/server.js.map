{"version":3,"sources":["../src/server.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAA;AAE1D,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAA;AAE9C,4BAAoB,CAAC,EAAE,CAAC,SAAS,aAAa,CAAE,YAAW,OAAO;IAChE,SAAS,CAAC,cAAc,CAAC,EAAE,CAAC,CAAY;IACxC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAA;gBAEP,OAAO,EAAE,CAAC;IAIV,OAAO,IAAK,OAAO,CAAC,IAAI,CAAC;IAIzB,IAAI,IAAK,OAAO,CAAC,IAAI,CAAC;IAItB,UAAU,IAAK,OAAO,CAAC,IAAI,CAAC;IAI5B,KAAK,IAAK,OAAO,CAAC,IAAI,CAAC;IAIvB,IAAI,IAAK,OAAO,CAAC,IAAI,CAAC;CAGpC;AAED,eAAO,MAAM,WAAW,QAAgB,CAAA","file":"server.js","sourcesContent":["/**\n * Copyright 2018-present, CODECO. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ServerOptions } from './interfaces/serverOptions'\nimport { Token } from '@pii/di'\nimport { IServer } from './interfaces/iServer'\n\nexport class Server<T, O extends ServerOptions> implements IServer {\n  protected serverInstance?: T = undefined\n  protected options: O\n\n  constructor (options: O) {\n    this.options = options\n  }\n\n  public async prepare (): Promise<void> {\n    // does nothing\n  }\n\n  public async init (): Promise<void> {\n    // does nothing\n  }\n\n  public async loadRoutes (): Promise<void> {\n    // does nothing\n  }\n\n  public async start (): Promise<void> {\n    // does nothing\n  }\n\n  public async stop (): Promise<void> {\n    // does nothing\n  }\n}\n\nexport const ServerToken = Token(Server)\n"]}