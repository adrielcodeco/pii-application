{"version":3,"sources":["../src/server.ts"],"names":[],"mappings":";;;;;;;;;;AAOA,gCAA+B;AAG/B;IAIE,YAAa,OAAU;QAHb,mBAAc,GAAO,SAAS,CAAA;QAItC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;IACxB,CAAC;IAEY,OAAO;;QAEpB,CAAC;KAAA;IAEY,IAAI;;QAEjB,CAAC;KAAA;IAEY,UAAU;;QAEvB,CAAC;KAAA;IAEY,KAAK;;QAElB,CAAC;KAAA;IAEY,IAAI;;QAEjB,CAAC;KAAA;CACF;AA3BD,wBA2BC;AAEY,QAAA,WAAW,GAAG,UAAK,CAAC,MAAM,CAAC,CAAA","file":"server.js","sourcesContent":["/**\n * Copyright 2018-present, CODECO. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ServerOptions } from './interfaces/serverOptions'\nimport { Token } from '@pii/di'\nimport { IServer } from './interfaces/iServer'\n\nexport class Server<T, O extends ServerOptions> implements IServer {\n  protected serverInstance?: T = undefined\n  protected options: O\n\n  constructor (options: O) {\n    this.options = options\n  }\n\n  public async prepare (): Promise<void> {\n    // does nothing\n  }\n\n  public async init (): Promise<void> {\n    // does nothing\n  }\n\n  public async loadRoutes (): Promise<void> {\n    // does nothing\n  }\n\n  public async start (): Promise<void> {\n    // does nothing\n  }\n\n  public async stop (): Promise<void> {\n    // does nothing\n  }\n}\n\nexport const ServerToken = Token(Server)\n"]}